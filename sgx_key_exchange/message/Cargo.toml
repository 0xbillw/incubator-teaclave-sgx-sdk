# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

[package]
name = "sgx_ra_msg"
version = "2.0.0"
authors = ["The Teaclave Authors"]
repository = "https://github.com/apache/teaclave-sgx-sdk"
license-file = "LICENSE"
documentation = "https://teaclave.apache.org/sgx-sdk-docs/"
description = "Rust SGX SDK provides the ability to write Intel SGX applications in Rust Programming Language."
edition = "2021"

[lib]
name = "sgx_ra_msg"
crate-type = ["rlib"]

[features]
default = ["tmsg"]
tmsg = ["sgx_trts", "sgx_tcrypto"]
umsg = ["sgx_ucrypto"]
tserialize = ["tmsg", "sgx_tserialize", "sgx_tcrypto/tserialize"]
userialize = ["umsg", "sgx_userialize", "sgx_ucrypto/userialize"]

[target.'cfg(not(target_vendor = "teaclave"))'.dependencies]
sgx_types = { path = "../../sgx_types" }
sgx_trts = { path = "../../sgx_trts", optional = true }

[dependencies]
sgx_tcrypto = { path = "../../sgx_crypto", default-features = false, features = ["tcrypto"], package = 'sgx_crypto', optional = true }
sgx_ucrypto = { path = "../../sgx_crypto", default-features = false, features = ["ucrypto"], package = 'sgx_crypto', optional = true }
sgx_tserialize = { path = "../../sgx_serialize", default-features = false, features = ["tserialize", "derive"], package = 'sgx_serialize', optional = true }
sgx_userialize = { path = "../../sgx_serialize", default-features = false, features = ["userialize", "derive"], package = 'sgx_serialize', optional = true }
